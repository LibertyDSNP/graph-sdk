// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bridge/common/protos/output.proto

package io.amplica.graphsdk.models;

/**
 * Protobuf type {@code Config}
 */
public final class Config extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:Config)
    ConfigOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Config.newBuilder() to construct.
  private Config(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Config() {
    dsnpVersions_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Config();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.amplica.graphsdk.models.Output.internal_static_Config_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 5:
        return internalGetSchemaMap();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.amplica.graphsdk.models.Output.internal_static_Config_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.amplica.graphsdk.models.Config.class, io.amplica.graphsdk.models.Config.Builder.class);
  }

  public static final int SDK_MAX_STALE_FRIENDSHIP_DAYS_FIELD_NUMBER = 1;
  private int sdkMaxStaleFriendshipDays_ = 0;
  /**
   * <code>uint32 sdk_max_stale_friendship_days = 1;</code>
   * @return The sdkMaxStaleFriendshipDays.
   */
  @java.lang.Override
  public int getSdkMaxStaleFriendshipDays() {
    return sdkMaxStaleFriendshipDays_;
  }

  public static final int MAX_GRAPH_PAGE_SIZE_BYTES_FIELD_NUMBER = 2;
  private int maxGraphPageSizeBytes_ = 0;
  /**
   * <code>uint32 max_graph_page_size_bytes = 2;</code>
   * @return The maxGraphPageSizeBytes.
   */
  @java.lang.Override
  public int getMaxGraphPageSizeBytes() {
    return maxGraphPageSizeBytes_;
  }

  public static final int MAX_PAGE_ID_FIELD_NUMBER = 3;
  private int maxPageId_ = 0;
  /**
   * <code>uint32 max_page_id = 3;</code>
   * @return The maxPageId.
   */
  @java.lang.Override
  public int getMaxPageId() {
    return maxPageId_;
  }

  public static final int MAX_KEY_PAGE_SIZE_BYTES_FIELD_NUMBER = 4;
  private int maxKeyPageSizeBytes_ = 0;
  /**
   * <code>uint32 max_key_page_size_bytes = 4;</code>
   * @return The maxKeyPageSizeBytes.
   */
  @java.lang.Override
  public int getMaxKeyPageSizeBytes() {
    return maxKeyPageSizeBytes_;
  }

  public static final int SCHEMA_MAP_FIELD_NUMBER = 5;
  private static final class SchemaMapDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.Integer, io.amplica.graphsdk.models.SchemaConfig> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.Integer, io.amplica.graphsdk.models.SchemaConfig>newDefaultInstance(
                io.amplica.graphsdk.models.Output.internal_static_Config_SchemaMapEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.UINT32,
                0,
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                io.amplica.graphsdk.models.SchemaConfig.getDefaultInstance());
  }
  @SuppressWarnings("serial")
  private com.google.protobuf.MapField<
      java.lang.Integer, io.amplica.graphsdk.models.SchemaConfig> schemaMap_;
  private com.google.protobuf.MapField<java.lang.Integer, io.amplica.graphsdk.models.SchemaConfig>
  internalGetSchemaMap() {
    if (schemaMap_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          SchemaMapDefaultEntryHolder.defaultEntry);
    }
    return schemaMap_;
  }
  public int getSchemaMapCount() {
    return internalGetSchemaMap().getMap().size();
  }
  /**
   * <code>map&lt;uint32, .SchemaConfig&gt; schema_map = 5;</code>
   */
  @java.lang.Override
  public boolean containsSchemaMap(
      int key) {
    
    return internalGetSchemaMap().getMap().containsKey(key);
  }
  /**
   * Use {@link #getSchemaMapMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.Integer, io.amplica.graphsdk.models.SchemaConfig> getSchemaMap() {
    return getSchemaMapMap();
  }
  /**
   * <code>map&lt;uint32, .SchemaConfig&gt; schema_map = 5;</code>
   */
  @java.lang.Override
  public java.util.Map<java.lang.Integer, io.amplica.graphsdk.models.SchemaConfig> getSchemaMapMap() {
    return internalGetSchemaMap().getMap();
  }
  /**
   * <code>map&lt;uint32, .SchemaConfig&gt; schema_map = 5;</code>
   */
  @java.lang.Override
  public /* nullable */
io.amplica.graphsdk.models.SchemaConfig getSchemaMapOrDefault(
      int key,
      /* nullable */
io.amplica.graphsdk.models.SchemaConfig defaultValue) {
    
    java.util.Map<java.lang.Integer, io.amplica.graphsdk.models.SchemaConfig> map =
        internalGetSchemaMap().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;uint32, .SchemaConfig&gt; schema_map = 5;</code>
   */
  @java.lang.Override
  public io.amplica.graphsdk.models.SchemaConfig getSchemaMapOrThrow(
      int key) {
    
    java.util.Map<java.lang.Integer, io.amplica.graphsdk.models.SchemaConfig> map =
        internalGetSchemaMap().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int DSNP_VERSIONS_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private java.util.List<java.lang.Integer> dsnpVersions_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, io.amplica.graphsdk.models.DsnpVersion> dsnpVersions_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, io.amplica.graphsdk.models.DsnpVersion>() {
            public io.amplica.graphsdk.models.DsnpVersion convert(java.lang.Integer from) {
              io.amplica.graphsdk.models.DsnpVersion result = io.amplica.graphsdk.models.DsnpVersion.forNumber(from);
              return result == null ? io.amplica.graphsdk.models.DsnpVersion.UNRECOGNIZED : result;
            }
          };
  /**
   * <code>repeated .DsnpVersion dsnp_versions = 6;</code>
   * @return A list containing the dsnpVersions.
   */
  @java.lang.Override
  public java.util.List<io.amplica.graphsdk.models.DsnpVersion> getDsnpVersionsList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, io.amplica.graphsdk.models.DsnpVersion>(dsnpVersions_, dsnpVersions_converter_);
  }
  /**
   * <code>repeated .DsnpVersion dsnp_versions = 6;</code>
   * @return The count of dsnpVersions.
   */
  @java.lang.Override
  public int getDsnpVersionsCount() {
    return dsnpVersions_.size();
  }
  /**
   * <code>repeated .DsnpVersion dsnp_versions = 6;</code>
   * @param index The index of the element to return.
   * @return The dsnpVersions at the given index.
   */
  @java.lang.Override
  public io.amplica.graphsdk.models.DsnpVersion getDsnpVersions(int index) {
    return dsnpVersions_converter_.convert(dsnpVersions_.get(index));
  }
  /**
   * <code>repeated .DsnpVersion dsnp_versions = 6;</code>
   * @return A list containing the enum numeric values on the wire for dsnpVersions.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
  getDsnpVersionsValueList() {
    return dsnpVersions_;
  }
  /**
   * <code>repeated .DsnpVersion dsnp_versions = 6;</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of dsnpVersions at the given index.
   */
  @java.lang.Override
  public int getDsnpVersionsValue(int index) {
    return dsnpVersions_.get(index);
  }
  private int dsnpVersionsMemoizedSerializedSize;

  public static final int GRAPH_PUBLIC_KEY_SCHEMA_ID_FIELD_NUMBER = 7;
  private int graphPublicKeySchemaId_ = 0;
  /**
   * <code>uint32 graph_public_key_schema_id = 7;</code>
   * @return The graphPublicKeySchemaId.
   */
  @java.lang.Override
  public int getGraphPublicKeySchemaId() {
    return graphPublicKeySchemaId_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (sdkMaxStaleFriendshipDays_ != 0) {
      output.writeUInt32(1, sdkMaxStaleFriendshipDays_);
    }
    if (maxGraphPageSizeBytes_ != 0) {
      output.writeUInt32(2, maxGraphPageSizeBytes_);
    }
    if (maxPageId_ != 0) {
      output.writeUInt32(3, maxPageId_);
    }
    if (maxKeyPageSizeBytes_ != 0) {
      output.writeUInt32(4, maxKeyPageSizeBytes_);
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeIntegerMapTo(
        output,
        internalGetSchemaMap(),
        SchemaMapDefaultEntryHolder.defaultEntry,
        5);
    if (getDsnpVersionsList().size() > 0) {
      output.writeUInt32NoTag(50);
      output.writeUInt32NoTag(dsnpVersionsMemoizedSerializedSize);
    }
    for (int i = 0; i < dsnpVersions_.size(); i++) {
      output.writeEnumNoTag(dsnpVersions_.get(i));
    }
    if (graphPublicKeySchemaId_ != 0) {
      output.writeUInt32(7, graphPublicKeySchemaId_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (sdkMaxStaleFriendshipDays_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(1, sdkMaxStaleFriendshipDays_);
    }
    if (maxGraphPageSizeBytes_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(2, maxGraphPageSizeBytes_);
    }
    if (maxPageId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(3, maxPageId_);
    }
    if (maxKeyPageSizeBytes_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(4, maxKeyPageSizeBytes_);
    }
    for (java.util.Map.Entry<java.lang.Integer, io.amplica.graphsdk.models.SchemaConfig> entry
         : internalGetSchemaMap().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.Integer, io.amplica.graphsdk.models.SchemaConfig>
      schemaMap__ = SchemaMapDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, schemaMap__);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < dsnpVersions_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(dsnpVersions_.get(i));
      }
      size += dataSize;
      if (!getDsnpVersionsList().isEmpty()) {  size += 1;
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(dataSize);
      }dsnpVersionsMemoizedSerializedSize = dataSize;
    }
    if (graphPublicKeySchemaId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(7, graphPublicKeySchemaId_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.amplica.graphsdk.models.Config)) {
      return super.equals(obj);
    }
    io.amplica.graphsdk.models.Config other = (io.amplica.graphsdk.models.Config) obj;

    if (getSdkMaxStaleFriendshipDays()
        != other.getSdkMaxStaleFriendshipDays()) return false;
    if (getMaxGraphPageSizeBytes()
        != other.getMaxGraphPageSizeBytes()) return false;
    if (getMaxPageId()
        != other.getMaxPageId()) return false;
    if (getMaxKeyPageSizeBytes()
        != other.getMaxKeyPageSizeBytes()) return false;
    if (!internalGetSchemaMap().equals(
        other.internalGetSchemaMap())) return false;
    if (!dsnpVersions_.equals(other.dsnpVersions_)) return false;
    if (getGraphPublicKeySchemaId()
        != other.getGraphPublicKeySchemaId()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SDK_MAX_STALE_FRIENDSHIP_DAYS_FIELD_NUMBER;
    hash = (53 * hash) + getSdkMaxStaleFriendshipDays();
    hash = (37 * hash) + MAX_GRAPH_PAGE_SIZE_BYTES_FIELD_NUMBER;
    hash = (53 * hash) + getMaxGraphPageSizeBytes();
    hash = (37 * hash) + MAX_PAGE_ID_FIELD_NUMBER;
    hash = (53 * hash) + getMaxPageId();
    hash = (37 * hash) + MAX_KEY_PAGE_SIZE_BYTES_FIELD_NUMBER;
    hash = (53 * hash) + getMaxKeyPageSizeBytes();
    if (!internalGetSchemaMap().getMap().isEmpty()) {
      hash = (37 * hash) + SCHEMA_MAP_FIELD_NUMBER;
      hash = (53 * hash) + internalGetSchemaMap().hashCode();
    }
    if (getDsnpVersionsCount() > 0) {
      hash = (37 * hash) + DSNP_VERSIONS_FIELD_NUMBER;
      hash = (53 * hash) + dsnpVersions_.hashCode();
    }
    hash = (37 * hash) + GRAPH_PUBLIC_KEY_SCHEMA_ID_FIELD_NUMBER;
    hash = (53 * hash) + getGraphPublicKeySchemaId();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.amplica.graphsdk.models.Config parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.amplica.graphsdk.models.Config parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.amplica.graphsdk.models.Config parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.amplica.graphsdk.models.Config parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.amplica.graphsdk.models.Config parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.amplica.graphsdk.models.Config parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.amplica.graphsdk.models.Config parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.amplica.graphsdk.models.Config parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.amplica.graphsdk.models.Config parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.amplica.graphsdk.models.Config parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.amplica.graphsdk.models.Config parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.amplica.graphsdk.models.Config parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.amplica.graphsdk.models.Config prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code Config}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:Config)
      io.amplica.graphsdk.models.ConfigOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.amplica.graphsdk.models.Output.internal_static_Config_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 5:
          return internalGetSchemaMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 5:
          return internalGetMutableSchemaMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.amplica.graphsdk.models.Output.internal_static_Config_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.amplica.graphsdk.models.Config.class, io.amplica.graphsdk.models.Config.Builder.class);
    }

    // Construct using io.amplica.graphsdk.models.Config.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      sdkMaxStaleFriendshipDays_ = 0;
      maxGraphPageSizeBytes_ = 0;
      maxPageId_ = 0;
      maxKeyPageSizeBytes_ = 0;
      internalGetMutableSchemaMap().clear();
      dsnpVersions_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000020);
      graphPublicKeySchemaId_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.amplica.graphsdk.models.Output.internal_static_Config_descriptor;
    }

    @java.lang.Override
    public io.amplica.graphsdk.models.Config getDefaultInstanceForType() {
      return io.amplica.graphsdk.models.Config.getDefaultInstance();
    }

    @java.lang.Override
    public io.amplica.graphsdk.models.Config build() {
      io.amplica.graphsdk.models.Config result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.amplica.graphsdk.models.Config buildPartial() {
      io.amplica.graphsdk.models.Config result = new io.amplica.graphsdk.models.Config(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(io.amplica.graphsdk.models.Config result) {
      if (((bitField0_ & 0x00000020) != 0)) {
        dsnpVersions_ = java.util.Collections.unmodifiableList(dsnpVersions_);
        bitField0_ = (bitField0_ & ~0x00000020);
      }
      result.dsnpVersions_ = dsnpVersions_;
    }

    private void buildPartial0(io.amplica.graphsdk.models.Config result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.sdkMaxStaleFriendshipDays_ = sdkMaxStaleFriendshipDays_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.maxGraphPageSizeBytes_ = maxGraphPageSizeBytes_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.maxPageId_ = maxPageId_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.maxKeyPageSizeBytes_ = maxKeyPageSizeBytes_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.schemaMap_ = internalGetSchemaMap();
        result.schemaMap_.makeImmutable();
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.graphPublicKeySchemaId_ = graphPublicKeySchemaId_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.amplica.graphsdk.models.Config) {
        return mergeFrom((io.amplica.graphsdk.models.Config)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.amplica.graphsdk.models.Config other) {
      if (other == io.amplica.graphsdk.models.Config.getDefaultInstance()) return this;
      if (other.getSdkMaxStaleFriendshipDays() != 0) {
        setSdkMaxStaleFriendshipDays(other.getSdkMaxStaleFriendshipDays());
      }
      if (other.getMaxGraphPageSizeBytes() != 0) {
        setMaxGraphPageSizeBytes(other.getMaxGraphPageSizeBytes());
      }
      if (other.getMaxPageId() != 0) {
        setMaxPageId(other.getMaxPageId());
      }
      if (other.getMaxKeyPageSizeBytes() != 0) {
        setMaxKeyPageSizeBytes(other.getMaxKeyPageSizeBytes());
      }
      internalGetMutableSchemaMap().mergeFrom(
          other.internalGetSchemaMap());
      bitField0_ |= 0x00000010;
      if (!other.dsnpVersions_.isEmpty()) {
        if (dsnpVersions_.isEmpty()) {
          dsnpVersions_ = other.dsnpVersions_;
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          ensureDsnpVersionsIsMutable();
          dsnpVersions_.addAll(other.dsnpVersions_);
        }
        onChanged();
      }
      if (other.getGraphPublicKeySchemaId() != 0) {
        setGraphPublicKeySchemaId(other.getGraphPublicKeySchemaId());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              sdkMaxStaleFriendshipDays_ = input.readUInt32();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              maxGraphPageSizeBytes_ = input.readUInt32();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              maxPageId_ = input.readUInt32();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              maxKeyPageSizeBytes_ = input.readUInt32();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 42: {
              com.google.protobuf.MapEntry<java.lang.Integer, io.amplica.graphsdk.models.SchemaConfig>
              schemaMap__ = input.readMessage(
                  SchemaMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              internalGetMutableSchemaMap().getMutableMap().put(
                  schemaMap__.getKey(), schemaMap__.getValue());
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 48: {
              int tmpRaw = input.readEnum();
              ensureDsnpVersionsIsMutable();
              dsnpVersions_.add(tmpRaw);
              break;
            } // case 48
            case 50: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int tmpRaw = input.readEnum();
                ensureDsnpVersionsIsMutable();
                dsnpVersions_.add(tmpRaw);
              }
              input.popLimit(oldLimit);
              break;
            } // case 50
            case 56: {
              graphPublicKeySchemaId_ = input.readUInt32();
              bitField0_ |= 0x00000040;
              break;
            } // case 56
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int sdkMaxStaleFriendshipDays_ ;
    /**
     * <code>uint32 sdk_max_stale_friendship_days = 1;</code>
     * @return The sdkMaxStaleFriendshipDays.
     */
    @java.lang.Override
    public int getSdkMaxStaleFriendshipDays() {
      return sdkMaxStaleFriendshipDays_;
    }
    /**
     * <code>uint32 sdk_max_stale_friendship_days = 1;</code>
     * @param value The sdkMaxStaleFriendshipDays to set.
     * @return This builder for chaining.
     */
    public Builder setSdkMaxStaleFriendshipDays(int value) {
      
      sdkMaxStaleFriendshipDays_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 sdk_max_stale_friendship_days = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearSdkMaxStaleFriendshipDays() {
      bitField0_ = (bitField0_ & ~0x00000001);
      sdkMaxStaleFriendshipDays_ = 0;
      onChanged();
      return this;
    }

    private int maxGraphPageSizeBytes_ ;
    /**
     * <code>uint32 max_graph_page_size_bytes = 2;</code>
     * @return The maxGraphPageSizeBytes.
     */
    @java.lang.Override
    public int getMaxGraphPageSizeBytes() {
      return maxGraphPageSizeBytes_;
    }
    /**
     * <code>uint32 max_graph_page_size_bytes = 2;</code>
     * @param value The maxGraphPageSizeBytes to set.
     * @return This builder for chaining.
     */
    public Builder setMaxGraphPageSizeBytes(int value) {
      
      maxGraphPageSizeBytes_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 max_graph_page_size_bytes = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxGraphPageSizeBytes() {
      bitField0_ = (bitField0_ & ~0x00000002);
      maxGraphPageSizeBytes_ = 0;
      onChanged();
      return this;
    }

    private int maxPageId_ ;
    /**
     * <code>uint32 max_page_id = 3;</code>
     * @return The maxPageId.
     */
    @java.lang.Override
    public int getMaxPageId() {
      return maxPageId_;
    }
    /**
     * <code>uint32 max_page_id = 3;</code>
     * @param value The maxPageId to set.
     * @return This builder for chaining.
     */
    public Builder setMaxPageId(int value) {
      
      maxPageId_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 max_page_id = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxPageId() {
      bitField0_ = (bitField0_ & ~0x00000004);
      maxPageId_ = 0;
      onChanged();
      return this;
    }

    private int maxKeyPageSizeBytes_ ;
    /**
     * <code>uint32 max_key_page_size_bytes = 4;</code>
     * @return The maxKeyPageSizeBytes.
     */
    @java.lang.Override
    public int getMaxKeyPageSizeBytes() {
      return maxKeyPageSizeBytes_;
    }
    /**
     * <code>uint32 max_key_page_size_bytes = 4;</code>
     * @param value The maxKeyPageSizeBytes to set.
     * @return This builder for chaining.
     */
    public Builder setMaxKeyPageSizeBytes(int value) {
      
      maxKeyPageSizeBytes_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 max_key_page_size_bytes = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxKeyPageSizeBytes() {
      bitField0_ = (bitField0_ & ~0x00000008);
      maxKeyPageSizeBytes_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.Integer, io.amplica.graphsdk.models.SchemaConfig> schemaMap_;
    private com.google.protobuf.MapField<java.lang.Integer, io.amplica.graphsdk.models.SchemaConfig>
        internalGetSchemaMap() {
      if (schemaMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            SchemaMapDefaultEntryHolder.defaultEntry);
      }
      return schemaMap_;
    }
    private com.google.protobuf.MapField<java.lang.Integer, io.amplica.graphsdk.models.SchemaConfig>
        internalGetMutableSchemaMap() {
      if (schemaMap_ == null) {
        schemaMap_ = com.google.protobuf.MapField.newMapField(
            SchemaMapDefaultEntryHolder.defaultEntry);
      }
      if (!schemaMap_.isMutable()) {
        schemaMap_ = schemaMap_.copy();
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return schemaMap_;
    }
    public int getSchemaMapCount() {
      return internalGetSchemaMap().getMap().size();
    }
    /**
     * <code>map&lt;uint32, .SchemaConfig&gt; schema_map = 5;</code>
     */
    @java.lang.Override
    public boolean containsSchemaMap(
        int key) {
      
      return internalGetSchemaMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getSchemaMapMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, io.amplica.graphsdk.models.SchemaConfig> getSchemaMap() {
      return getSchemaMapMap();
    }
    /**
     * <code>map&lt;uint32, .SchemaConfig&gt; schema_map = 5;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, io.amplica.graphsdk.models.SchemaConfig> getSchemaMapMap() {
      return internalGetSchemaMap().getMap();
    }
    /**
     * <code>map&lt;uint32, .SchemaConfig&gt; schema_map = 5;</code>
     */
    @java.lang.Override
    public /* nullable */
io.amplica.graphsdk.models.SchemaConfig getSchemaMapOrDefault(
        int key,
        /* nullable */
io.amplica.graphsdk.models.SchemaConfig defaultValue) {
      
      java.util.Map<java.lang.Integer, io.amplica.graphsdk.models.SchemaConfig> map =
          internalGetSchemaMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint32, .SchemaConfig&gt; schema_map = 5;</code>
     */
    @java.lang.Override
    public io.amplica.graphsdk.models.SchemaConfig getSchemaMapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, io.amplica.graphsdk.models.SchemaConfig> map =
          internalGetSchemaMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    public Builder clearSchemaMap() {
      bitField0_ = (bitField0_ & ~0x00000010);
      internalGetMutableSchemaMap().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;uint32, .SchemaConfig&gt; schema_map = 5;</code>
     */
    public Builder removeSchemaMap(
        int key) {
      
      internalGetMutableSchemaMap().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, io.amplica.graphsdk.models.SchemaConfig>
        getMutableSchemaMap() {
      bitField0_ |= 0x00000010;
      return internalGetMutableSchemaMap().getMutableMap();
    }
    /**
     * <code>map&lt;uint32, .SchemaConfig&gt; schema_map = 5;</code>
     */
    public Builder putSchemaMap(
        int key,
        io.amplica.graphsdk.models.SchemaConfig value) {
      
      if (value == null) { throw new NullPointerException("map value"); }
      internalGetMutableSchemaMap().getMutableMap()
          .put(key, value);
      bitField0_ |= 0x00000010;
      return this;
    }
    /**
     * <code>map&lt;uint32, .SchemaConfig&gt; schema_map = 5;</code>
     */
    public Builder putAllSchemaMap(
        java.util.Map<java.lang.Integer, io.amplica.graphsdk.models.SchemaConfig> values) {
      internalGetMutableSchemaMap().getMutableMap()
          .putAll(values);
      bitField0_ |= 0x00000010;
      return this;
    }

    private java.util.List<java.lang.Integer> dsnpVersions_ =
      java.util.Collections.emptyList();
    private void ensureDsnpVersionsIsMutable() {
      if (!((bitField0_ & 0x00000020) != 0)) {
        dsnpVersions_ = new java.util.ArrayList<java.lang.Integer>(dsnpVersions_);
        bitField0_ |= 0x00000020;
      }
    }
    /**
     * <code>repeated .DsnpVersion dsnp_versions = 6;</code>
     * @return A list containing the dsnpVersions.
     */
    public java.util.List<io.amplica.graphsdk.models.DsnpVersion> getDsnpVersionsList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, io.amplica.graphsdk.models.DsnpVersion>(dsnpVersions_, dsnpVersions_converter_);
    }
    /**
     * <code>repeated .DsnpVersion dsnp_versions = 6;</code>
     * @return The count of dsnpVersions.
     */
    public int getDsnpVersionsCount() {
      return dsnpVersions_.size();
    }
    /**
     * <code>repeated .DsnpVersion dsnp_versions = 6;</code>
     * @param index The index of the element to return.
     * @return The dsnpVersions at the given index.
     */
    public io.amplica.graphsdk.models.DsnpVersion getDsnpVersions(int index) {
      return dsnpVersions_converter_.convert(dsnpVersions_.get(index));
    }
    /**
     * <code>repeated .DsnpVersion dsnp_versions = 6;</code>
     * @param index The index to set the value at.
     * @param value The dsnpVersions to set.
     * @return This builder for chaining.
     */
    public Builder setDsnpVersions(
        int index, io.amplica.graphsdk.models.DsnpVersion value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureDsnpVersionsIsMutable();
      dsnpVersions_.set(index, value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <code>repeated .DsnpVersion dsnp_versions = 6;</code>
     * @param value The dsnpVersions to add.
     * @return This builder for chaining.
     */
    public Builder addDsnpVersions(io.amplica.graphsdk.models.DsnpVersion value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureDsnpVersionsIsMutable();
      dsnpVersions_.add(value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <code>repeated .DsnpVersion dsnp_versions = 6;</code>
     * @param values The dsnpVersions to add.
     * @return This builder for chaining.
     */
    public Builder addAllDsnpVersions(
        java.lang.Iterable<? extends io.amplica.graphsdk.models.DsnpVersion> values) {
      ensureDsnpVersionsIsMutable();
      for (io.amplica.graphsdk.models.DsnpVersion value : values) {
        dsnpVersions_.add(value.getNumber());
      }
      onChanged();
      return this;
    }
    /**
     * <code>repeated .DsnpVersion dsnp_versions = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearDsnpVersions() {
      dsnpVersions_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .DsnpVersion dsnp_versions = 6;</code>
     * @return A list containing the enum numeric values on the wire for dsnpVersions.
     */
    public java.util.List<java.lang.Integer>
    getDsnpVersionsValueList() {
      return java.util.Collections.unmodifiableList(dsnpVersions_);
    }
    /**
     * <code>repeated .DsnpVersion dsnp_versions = 6;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of dsnpVersions at the given index.
     */
    public int getDsnpVersionsValue(int index) {
      return dsnpVersions_.get(index);
    }
    /**
     * <code>repeated .DsnpVersion dsnp_versions = 6;</code>
     * @param index The index to set the value at.
     * @param value The enum numeric value on the wire for dsnpVersions to set.
     * @return This builder for chaining.
     */
    public Builder setDsnpVersionsValue(
        int index, int value) {
      ensureDsnpVersionsIsMutable();
      dsnpVersions_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .DsnpVersion dsnp_versions = 6;</code>
     * @param value The enum numeric value on the wire for dsnpVersions to add.
     * @return This builder for chaining.
     */
    public Builder addDsnpVersionsValue(int value) {
      ensureDsnpVersionsIsMutable();
      dsnpVersions_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .DsnpVersion dsnp_versions = 6;</code>
     * @param values The enum numeric values on the wire for dsnpVersions to add.
     * @return This builder for chaining.
     */
    public Builder addAllDsnpVersionsValue(
        java.lang.Iterable<java.lang.Integer> values) {
      ensureDsnpVersionsIsMutable();
      for (int value : values) {
        dsnpVersions_.add(value);
      }
      onChanged();
      return this;
    }

    private int graphPublicKeySchemaId_ ;
    /**
     * <code>uint32 graph_public_key_schema_id = 7;</code>
     * @return The graphPublicKeySchemaId.
     */
    @java.lang.Override
    public int getGraphPublicKeySchemaId() {
      return graphPublicKeySchemaId_;
    }
    /**
     * <code>uint32 graph_public_key_schema_id = 7;</code>
     * @param value The graphPublicKeySchemaId to set.
     * @return This builder for chaining.
     */
    public Builder setGraphPublicKeySchemaId(int value) {
      
      graphPublicKeySchemaId_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 graph_public_key_schema_id = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearGraphPublicKeySchemaId() {
      bitField0_ = (bitField0_ & ~0x00000040);
      graphPublicKeySchemaId_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:Config)
  }

  // @@protoc_insertion_point(class_scope:Config)
  private static final io.amplica.graphsdk.models.Config DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.amplica.graphsdk.models.Config();
  }

  public static io.amplica.graphsdk.models.Config getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Config>
      PARSER = new com.google.protobuf.AbstractParser<Config>() {
    @java.lang.Override
    public Config parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Config> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Config> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.amplica.graphsdk.models.Config getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

